var fs = require('fs');

// var Iconv = require('iconv').Iconv;
// var Buffer = require('buffer').Buffer;


// 	function readFileSync_encoding(filename, encoding) {
//     var content = fs.readFileSync(filename);
//     var iconv = new Iconv(encoding, 'UTF-8');
//     var buffer = iconv.convert(content);
//     return buffer.toString('utf8');
// }

// var count = (temp.match(/is/g) || []).length;

// if (encoding !== '' && !(encoding == 'utf8' || encoding == 'utf8')) {
// 	var iconv = new Iconv('CP1251', 'UTF8');
// 	console.log(text);
// 	var buffer = iconv.convert(text);
// 	console.log(buffer);
// 	text = buffer.toString('utf8');		
// 	console.log(text);
// }

function File() {

	function getName(path) {
		var reg=/^.*(\\|\/)(.*?)$/; 
		var result = reg.exec(path);
		var name = RegExp.$2;
		return name;
	}

	function getEncoding(contents) {
		var encoding = contents.match(/encoding="(.*?)"/)[1].toLowerCase() || '';
		return encoding;
	}

	function open(path) {
		var text;
		// fs.readFile(path, 'utf-8', function (error, contents) {			
		// 	if (error == undefined) {
		// 		text = String(contents);
		// 	}
		// 	else {
		// 		alert('Документ не выбран или выбран не верно.');
		// 		text = '';
		// 	}
		// });

		try {
			text = fs.readFileSync(path, 'utf-8');
		} catch (e) {
			if (e.code === 'ENOENT') {
				console.log('File not found!');
			} else {
				throw e;
				console.log(e.message);
			}
		}
		
		return text;	
	}

	function save(path, text) {
		try {
			fs.writeFileSync(path, text);
		} catch (e) {
			// throw e;
			console.log(e.message);
		}
		
	}

	this.getName = getName;
	this.getEncoding = getEncoding;
	this.open = open;
	this.save = save;

}

module.exports = new File;
